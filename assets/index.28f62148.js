import{i as e,c as t}from"./vendor.d7bea3fb.js";const n=.399,o=.587-.05,a=.064;function r(e,t,n,o){let a=0,r=0,i=0;const c=e[0],l=t[0]-e[0],s=e[1],d=t[1]-e[1],u=Math.max(Math.abs(l),Math.abs(d));for(let m=0;m<u;m++){const e=Math.round(c+l/u*m),t=Math.round(s+d/u*m),o=n[e][t];a+=o.r,r+=o.g,i+=o.b}return o?(a+r+i)/(765*u):[Math.round(a/u),Math.round(r/u),Math.round(i/u)]}function i(e,t,n={}){const{color:o="#0008",close:a=!1,shiftY:r=0}=n;e.beginPath(),e.lineWidth=23,e.moveTo(t[0]._x,t[0]._y+r);for(const i of t)e.lineTo(i._x,i._y+r);a&&e.lineTo(t[0]._x,t[0]._y+r),e.strokeStyle=o,e.stroke()}function c(e){return e.beginPath(),{line:function(t,n,o={}){const{color:a="#000",width:r=1}=o;e.beginPath(),e.lineWidth=r,e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),e.strokeStyle=a,e.stroke()},lineBuffer:function(t,n){e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1])},stroke:function(t={}){const{color:n="#000",width:o=1}=t;e.lineWidth=o,e.strokeStyle=n,e.stroke(),e.beginPath()}}}window.IMAGE_SRC="./test.jpg",window.CURRENT_DRAWING=(new Date).getTime(),window.COORDS=[];const l={singleLine:!0,faceApi:!1,baseLineNumber:4e3,updateSampleRate:128,addColor:"#000",substractionColor:"rgba(255,255,255,30%)",precisionRange:[16,28]},s=JSON.parse(JSON.stringify(l)),d=document.querySelector("canvas#src"),u=document.querySelector("canvas#draw");u.width=1080,u.height=1080;const m=u.getContext("2d"),f=c(m),h={matrix:[]};async function g(l){window.CURRENT_DRAWING=(new Date).getTime(),window.COORDS=[],m.fillStyle="#fff",m.fillRect(0,0,1080,1080),document.querySelector("#srcimg").style.backgroundImage=`url("${l}")`;const u=await e(l,{size:1080,canvas:d}),{canvasData:g,averageLightness:w}=function(e){let t=e.data,r=1/0,i=0,c=0;for(let s=0;s<t.length;s+=4){let e=t[s]*n+t[s+1]*o+t[s+2]*a;r=Math.min(r,e),i=Math.max(i,e),c+=e}c=Math.round(c/(t.length/4)),r+=32,i-=32;const l=255/(i-r);for(let s=0;s<t.length;s+=4){let e=t[s]*n+t[s+1]*o+t[s+2]*a;t[s]=Math.round(e*l)-r,t[s+1]=Math.round(e*l)-r,t[s+2]=Math.round(e*l)-r}return{canvasData:e,averageLightness:c}}(u);if(u.ctx.putImageData(g,0,0),s.faceApi)try{await async function(e,t){await faceapi.nets.ssdMobilenetv1.loadFromUri("weights"),await faceapi.nets.faceLandmark68TinyNet.loadFromUri("weights");const n=await faceapi.detectSingleFace(e).withFaceLandmarks(!0);if(!n)return;const o=n.landmarks.getRightEye(),a=n.landmarks.getLeftEye(),r=n.landmarks.getJawOutline();i(t,o,{close:!0}),i(t,a,{close:!0}),i(t,r.slice(2,-2),{color:"#0004",shiftY:10})}(d,u.ctx)}catch(v){console.warn("no face")}document.querySelector(".loading").style.display="none";const p=u.ctx;h.matrix=t(p);const y=c(u.ctx);let M=[Math.floor(1080*Math.random()),Math.floor(1080*Math.random())];for(;h.matrix[M[0]][M[1]].r+h.matrix[M[0]][M[1]].g+h.matrix[M[0]][M[1]].b===765;)M=[Math.floor(1080*Math.random()),Math.floor(1080*Math.random())];function R(){let e=M,t=s.singleLine?0:2*s.precisionRange[0];for(;t--;){let t=[Math.floor(1080*Math.random()),Math.floor(1080*Math.random())];h.matrix[e[0]][e[1]].r+h.matrix[e[0]][e[1]].g+h.matrix[e[0]][e[1]].b>h.matrix[t[0]][t[1]].r+h.matrix[t[0]][t[1]].g+h.matrix[t[0]][t[1]].b&&(e=t)}let n,o=function(e,t){return Math.min(e,t)+Math.floor(Math.random()*Math.abs(e-t))}(...s.precisionRange),a=1;for(;o--;){let t=[Math.floor(1080*Math.random()),Math.floor(1080*Math.random())];const o=r(e,t,h.matrix,!0);o<=a&&(a=o,n=t)}a=r(e,n,h.matrix,!0),window.COORDS.push([e,n]),f.lineBuffer(e,n,{color:"#000"}),y.lineBuffer(e,n,{color:s.substractionColor}),M=n}let b=Math.floor(s.baseLineNumber/w*128);function S(e){return new Promise((n=>{const o=(new Date).getTime();for(;(new Date).getTime()<o+15&&b-- >0;){if(e!==window.CURRENT_DRAWING)return;b%s.updateSampleRate==0&&(f.stroke({color:s.addColor}),y.stroke({color:s.substractionColor,width:1.5}),h.matrix=t(p)),R()}f.stroke({color:s.addColor}),y.stroke({color:s.substractionColor,width:1.5}),window.requestAnimationFrame(n)}))}!async function(e){for(;b>0&&e===window.CURRENT_DRAWING;)await S(e)}(window.CURRENT_DRAWING)}function w(){const e=document.querySelector("input[type='range']#lines").value,t=document.querySelector("input[type='range']#singleline").value,n=document.querySelector("input[type='range']#faceapi").value,o=document.querySelector("input[type='range']#contrast").value,a=document.querySelector("input[type='range']#definition").value;s.baseLineNumber=l.baseLineNumber/50*e,s.substractionColor=`rgba(255, 255, 255, ${100-o}%)`,s.precisionRange=[a,2*a],s.singleLine=!!Number(t),s.faceApi=!!Number(n),s.faceApi&&(document.querySelector(".loading").style.display="block"),g(window.IMAGE_SRC)}g(window.IMAGE_SRC),document.querySelector("#inp").addEventListener("change",(function(){if(this.files&&this.files[0]){const e=new FileReader;e.addEventListener("load",(function(e){window.IMAGE_SRC=e.target.result,g(window.IMAGE_SRC)})),e.readAsDataURL(this.files[0])}})),document.querySelector("#inputbutton").addEventListener("click",(()=>{document.querySelector("#inp").click()})),document.querySelectorAll("input[type='range']").forEach((e=>{e.addEventListener("change",function(e,t){let n;return function(){clearTimeout(n);let o=arguments;n=setTimeout((function(){e.apply(this,o)}),t||1)}}(w,256))})),document.querySelector("#download").addEventListener("click",(()=>{const e=document.createElement("a");e.download="PINTR.png",e.href=document.querySelector("canvas#draw").toDataURL(),e.click()})),document.querySelector("#downloadsvg").addEventListener("click",(()=>{const e=document.createElement("a");e.download="PINTR.svg";const t=`<svg viewBox="0 0 1080 1080" xmlns="http://www.w3.org/2000/svg">\n  <polyline points="${window.COORDS.map((e=>e[0].join(","))).join(" ")}" fill="none" stroke="black" />\n</svg>\n  `;const n=new Blob([t],{type:"image/svg+xml;charset=utf-8"}),o=URL.createObjectURL(n);e.href=o,e.click()}));
